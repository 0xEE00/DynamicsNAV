OBJECT Codeunit 60000 REST WS Management
{
  OBJECT-PROPERTIES
  {
    Date=11-11-16;
    Time=19:43:47;
    Modified=Yes;
    Version List=WebService-Example;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE CallRESTWebService@1000000002(VAR Parameters@1006 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";VAR HttpResponseMessage@1000 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage") : Boolean;
    VAR
      HttpContent@1001 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpContent";
      HttpClient@1000000003 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpClient";
      AuthHeaderValue@1004 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.Headers.AuthenticationHeaderValue";
      EntityTagHeaderValue@1007 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.Headers.EntityTagHeaderValue";
      Uri@1000000002 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Uri";
      bytes@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array";
      Encoding@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.Encoding";
      Convert@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      HttpRequestMessage@1008 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpRequestMessage";
      HttpMethod@1009 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpMethod";
    BEGIN
      HttpClient := HttpClient.HttpClient();
      HttpClient.BaseAddress := Uri.Uri(FORMAT(Parameters.Item('baseurl')));

      HttpRequestMessage :=
        HttpRequestMessage.HttpRequestMessage(HttpMethod.HttpMethod(UPPERCASE(FORMAT(Parameters.Item('restmethod')))),
                                              FORMAT(Parameters.Item('path')));;

      IF Parameters.ContainsKey('accept') THEN
        HttpRequestMessage.Headers.Add('Accept',FORMAT(Parameters.Item('accept')));

      IF Parameters.ContainsKey('username') THEN BEGIN
        bytes := Encoding.ASCII.GetBytes(STRSUBSTNO('%1:%2',FORMAT(Parameters.Item('username')),FORMAT(Parameters.Item('password'))));
        AuthHeaderValue := AuthHeaderValue.AuthenticationHeaderValue('Basic',Convert.ToBase64String(bytes));
        HttpRequestMessage.Headers.Authorization := AuthHeaderValue;
      END;

      IF Parameters.ContainsKey('etag') THEN
        HttpRequestMessage.Headers.IfMatch.Add(Parameters.Item('etag'));

      IF Parameters.ContainsKey('httpcontent') THEN
        HttpRequestMessage.Content := Parameters.Item('httpcontent');

      HttpResponseMessage := HttpClient.SendAsync(HttpRequestMessage).Result;
      EXIT(HttpResponseMessage.IsSuccessStatusCode);
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 60001 Json Helper Functions
{
  OBJECT-PROPERTIES
  {
    Date=11-11-16;
    Time=20:52:56;
    Modified=Yes;
    Version List=WebService-Example;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE GetValueAsText@2(JObject@1000 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";PropertyName@1001 : Text) ReturnValue : Text;
    BEGIN
      ReturnValue := JObject.GetValue(PropertyName).ToString;
    END;

    PROCEDURE GetValueAsInteger@8(JObject@1000 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";PropertyName@1001 : Text) ReturnValue : Integer;
    VAR
      DotNetInteger@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Int32";
    BEGIN
      ReturnValue := DotNetInteger.Parse(JObject.GetValue(PropertyName).ToString);
    END;

    PROCEDURE GetValueAsDecimal@3(JObject@1000 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";PropertyName@1001 : Text) ReturnValue : Decimal;
    VAR
      DotNetDecimal@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Decimal";
      CultureInfo@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Globalization.CultureInfo";
    BEGIN
      ReturnValue := DotNetDecimal.Parse(JObject.GetValue(PropertyName).ToString,CultureInfo.InvariantCulture);
    END;

    PROCEDURE GetValueAsDate@5(JObject@1000 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";PropertyName@1001 : Text) ReturnValue : Date;
    VAR
      DotNetDateTime@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.DateTime";
      CultureInfo@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Globalization.CultureInfo";
    BEGIN
      DotNetDateTime := JObject.GetValue(PropertyName).ToObject(GETDOTNETTYPE(DotNetDateTime));
      ReturnValue := DT2DATE(DotNetDateTime);
    END;

    PROCEDURE GetValueAsTime@4(JObject@1000 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";PropertyName@1001 : Text) ReturnValue : Time;
    VAR
      DotNetDateTime@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.DateTime";
      CultureInfo@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Globalization.CultureInfo";
    BEGIN
      DotNetDateTime := JObject.GetValue(PropertyName).ToObject(GETDOTNETTYPE(DotNetDateTime));
      ReturnValue := DT2TIME(DotNetDateTime);
    END;

    PROCEDURE GetValueAsDateTime@6(JObject@1000 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";PropertyName@1001 : Text) ReturnValue : DateTime;
    VAR
      DotNetDateTime@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.DateTime";
      CultureInfo@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Globalization.CultureInfo";
    BEGIN
      DotNetDateTime := JObject.GetValue(PropertyName).ToObject(GETDOTNETTYPE(DotNetDateTime));
      ReturnValue := DotNetDateTime;
    END;

    PROCEDURE GetValueAsBoolean@7(JObject@1000 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";PropertyName@1001 : Text) ReturnValue : Boolean;
    VAR
      DotNetBoolean@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Boolean";
    BEGIN
      ReturnValue := DotNetBoolean.Parse(JObject.GetValue(PropertyName).ToString);
    END;

    PROCEDURE GetODataErrorMessage@9(ErrorObject@1000 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken") ReturnValue : Text;
    VAR
      JToken@1001 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken";
    BEGIN
      JToken := ErrorObject.SelectToken('$.[''odata.error''].[''message'']');
      ReturnValue := GetValueAsText(JToken,'value');
    END;

    [TryFunction]
    PROCEDURE TryParse@1(json@1000 : Text;VAR JToken@1002 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken");
    BEGIN
      JToken := JToken.Parse(json);
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 72000 NAV WS Read Demo
{
  OBJECT-PROPERTIES
  {
    Date=11-11-16;
    Time=08:01:56;
    Modified=Yes;
    Version List=WebService-Example;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            Initialize;
            TestJsonValues;
            GetItemList;
            GetSalesOrders;
          END;

  }
  CODE
  {
    VAR
      BaseUrl@1001 : Text;
      WSCompanyName@1000 : Text;
      NAVServerInstance@1002 : Text;

    LOCAL PROCEDURE TestJsonValues@1();
    VAR
      Parameters@1011 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      RESTWSManagement@1003 : Codeunit 60000;
      HttpResponseMessage@1002 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
      null@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      JsonConvert@1006 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.JsonConvert";
      JArray@1005 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JArray";
      JObject@1004 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      JToken@1007 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken";
      result@1000 : Text;
      JsonHelperFunctions@1008 : Codeunit 60001;
    BEGIN
      Parameters := Parameters.Dictionary();
      Parameters.Add('baseurl',BaseUrl);
      Parameters.Add('path',GetODataPath('TestJsonValues'));
      Parameters.Add('restmethod','GET');
      Parameters.Add('accept','application/json');
      Parameters.Add('username',GetUserName);
      Parameters.Add('password',GetPassword);

      RESTWSManagement.CallRESTWebService(Parameters,HttpResponseMessage);

      result := HttpResponseMessage.Content.ReadAsStringAsync.Result;

      JToken := JToken.Parse(result);
      JArray := JToken.SelectToken('value');

      JObject := JArray.First;
      MESSAGE('%1\\' +
              'TextValue:     %2\' +
              'IntegerValue:  %3\' +
              'DecimalValue:  %4\' +
              'DateValue:     %5\' +
              'TimeValue:     %6\' +
              'DateTimeValue: %7\' +
              'BooleanValue:  %8',
              result,
              JsonHelperFunctions.GetValueAsText(JObject,'TextValue'),
              JsonHelperFunctions.GetValueAsInteger(JObject,'IntegerValue'),
              JsonHelperFunctions.GetValueAsDecimal(JObject,'DecimalValue'),
              JsonHelperFunctions.GetValueAsDate(JObject,'DateValue'),
              JsonHelperFunctions.GetValueAsTime(JObject,'TimeValue'),
              JsonHelperFunctions.GetValueAsDateTime(JObject,'DateTimeValue'),
              JsonHelperFunctions.GetValueAsBoolean(JObject,'BooleanValue'));
    END;

    PROCEDURE GetItemList@2();
    VAR
      Parameters@1011 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      RESTWSManagement@1003 : Codeunit 60000;
      HttpResponseMessage@1002 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
      null@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      JsonConvert@1006 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.JsonConvert";
      JArray@1005 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JArray";
      JObject@1004 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      JToken@1007 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken";
      ItemList@1008 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JArray";
      Item@1009 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      result@1000 : Text;
      TempItem@1010 : TEMPORARY Record 27;
    BEGIN
      Parameters := Parameters.Dictionary();
      Parameters.Add('baseurl',BaseUrl);
      Parameters.Add('path',GetODataPath('ItemList'));
      Parameters.Add('restmethod','GET');
      Parameters.Add('accept','application/json');
      Parameters.Add('username',GetUserName);
      Parameters.Add('password',GetPassword);

      RESTWSManagement.CallRESTWebService(Parameters,HttpResponseMessage);

      result := HttpResponseMessage.Content.ReadAsStringAsync.Result;

      JToken := JToken.Parse(result);
      ItemList := JToken.SelectToken('value');

      FOREACH Item IN ItemList DO BEGIN
        TempItem.INIT;
        TempItem."No." := Item.GetValue('No').ToString;
        TempItem.Description := Item.GetValue('Description').ToString;
        TempItem.INSERT;
      END;

      TempItem.FIND('-');
      PAGE.RUN(0,TempItem);
    END;

    PROCEDURE GetSalesOrder@5(OrderNo@1010 : Code[20];VAR ETag@1000 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.Headers.EntityTagHeaderValue") result : Text;
    VAR
      Parameters@1011 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      RESTWSManagement@1003 : Codeunit 60000;
      HttpResponseMessage@1002 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
    BEGIN
      Initialize;
      Parameters := Parameters.Dictionary();
      Parameters.Add('baseurl',BaseUrl);
      Parameters.Add('path',GetODataPath('SalesOrder(Document_Type=''Order'',No=''' + OrderNo + ''')'));
      Parameters.Add('restmethod','GET');
      Parameters.Add('accept','application/json');
      Parameters.Add('username',GetUserName);
      Parameters.Add('password',GetPassword);

      RESTWSManagement.CallRESTWebService(Parameters,HttpResponseMessage);

      result := HttpResponseMessage.Content.ReadAsStringAsync.Result;
      ETag := HttpResponseMessage.Headers.ETag;
    END;

    PROCEDURE GetSalesOrders@4();
    VAR
      Parameters@1011 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      RESTWSManagement@1003 : Codeunit 60000;
      HttpResponseMessage@1002 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
      null@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      JsonConvert@1006 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.JsonConvert";
      JArray@1005 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JArray";
      JObject@1004 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      JToken@1007 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken";
      SalesOrderList@1008 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JArray";
      SalesOrder@1009 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      JsonHelperFunctions@1012 : Codeunit 60001;
      result@1000 : Text;
    BEGIN
      Parameters := Parameters.Dictionary();
      Parameters.Add('baseurl',BaseUrl);
      Parameters.Add('path',GetODataPath('SalesOrder') + '?$filter=Sell_to_Customer_No eq ''10000''');
      Parameters.Add('restmethod','GET');
      Parameters.Add('accept','application/json');
      Parameters.Add('username',GetUserName);
      Parameters.Add('password',GetPassword);

      RESTWSManagement.CallRESTWebService(Parameters,HttpResponseMessage);

      result := HttpResponseMessage.Content.ReadAsStringAsync.Result;

      JToken := JToken.Parse(result);
      SalesOrderList := JToken.SelectToken('value');

      FOREACH SalesOrder IN SalesOrderList DO BEGIN
        MESSAGE('%1',JsonHelperFunctions.GetValueAsText(SalesOrder,'No'));
        GetSalesOrderLine(JsonHelperFunctions.GetValueAsText(SalesOrder,'No'));
      END;
    END;

    PROCEDURE GetSalesOrderLine@6(SalesOrderNo@1012 : Code[20]);
    VAR
      Parameters@1011 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      RESTWSManagement@1003 : Codeunit 60000;
      HttpResponseMessage@1002 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
      null@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Object";
      JsonConvert@1006 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.JsonConvert";
      JArray@1005 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JArray";
      JObject@1004 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      JToken@1007 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken";
      SalesOrderLineList@1008 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JArray";
      SalesOrderLine@1009 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      JsonHelperFunctions@1010 : Codeunit 60001;
      result@1000 : Text;
    BEGIN
      Parameters := Parameters.Dictionary();
      Parameters.Add('baseurl',BaseUrl);
      Parameters.Add('path',GetODataPath('SalesOrder') + '(Document_Type=''Order'',No=''' + SalesOrderNo + ''')/SalesOrderSalesLines');
      Parameters.Add('restmethod','GET');
      Parameters.Add('accept','application/json');
      Parameters.Add('username',GetUserName);
      Parameters.Add('password',GetPassword);

      RESTWSManagement.CallRESTWebService(Parameters,HttpResponseMessage);

      result := HttpResponseMessage.Content.ReadAsStringAsync.Result;

      JToken := JToken.Parse(result);
      SalesOrderLineList := JToken.SelectToken('value');

      FOREACH SalesOrderLine IN SalesOrderLineList DO BEGIN
        MESSAGE('Item: %1\' +
                'Description: %2\' +
                'Quantity: %3\' +
                'Amount: %4',
                JsonHelperFunctions.GetValueAsText(SalesOrderLine,'No'),
                JsonHelperFunctions.GetValueAsText(SalesOrderLine,'Description'),
                JsonHelperFunctions.GetValueAsDecimal(SalesOrderLine,'Quantity'),
                JsonHelperFunctions.GetValueAsDecimal(SalesOrderLine,'Line_Amount'));
      END;
    END;

    PROCEDURE GetUserName@17() : Text;
    BEGIN
      EXIT('WEBSERVICE');
    END;

    LOCAL PROCEDURE GetPassword@18() : Text;
    BEGIN
      EXIT('xz46L9GuM7M57Q4FBYVoFMN+Yc2JZiVg60mfUPApaxw=');
    END;

    LOCAL PROCEDURE GetODataPath@9(WSMethod@1000 : Text) ReturnValue : Text;
    BEGIN
      ReturnValue := STRSUBSTNO('%1/OData/Company(''%2'')/%3',
                                NAVServerInstance,
                                URLPathEncode(WSCompanyName),
                                WSMethod);
    END;

    LOCAL PROCEDURE URLPathEncode@3(Value@1000 : Text) ReturnValue : Text;
    VAR
      HttpUtility@1001 : DotNet "'System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Web.HttpUtility";
    BEGIN
      ReturnValue := HttpUtility.UrlPathEncode(Value);
    END;

    LOCAL PROCEDURE Initialize@7();
    BEGIN
      BaseUrl := 'http://MYNAV:8048/';
      NAVServerInstance := 'DynamicsNAV90_WS';
      WSCompanyName := 'CRONUS International Ltd.';
    END;

    BEGIN
    END.
  }
}

OBJECT Codeunit 72001 NAV WS Write Demo
{
  OBJECT-PROPERTIES
  {
    Date=07-12-16;
    Time=02:18:35;
    Modified=Yes;
    Version List=WebService-Example;
  }
  PROPERTIES
  {
    OnRun=VAR
            OrderNo@1000 : Code[20];
          BEGIN
            Initialize();
            CreateNewSalesOrder(OrderNo);
            CreateNewSalesLine(OrderNo);
            UpdateSalesOrder(OrderNo);
            DeleteSalesOrder(OrderNo);
          END;

  }
  CODE
  {
    VAR
      BaseUrl@1001 : Text;
      WSCompanyName@1000 : Text;
      NAVServerInstance@1002 : Text;
      JsonHelperFunctions@1003 : Codeunit 60001;

    LOCAL PROCEDURE CreateNewSalesOrder@26(VAR OrderNo@1012 : Code[20]);
    VAR
      Parameters@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      JObject@1007 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      JTokenWriter@1006 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JTokenWriter";
      JsonFormatting@1010 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Formatting";
      StringContent@1005 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.StringContent";
      Encoding@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.Encoding";
      HttpResponseMessage@1003 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
      JsonConvert@1008 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.JsonConvert";
      RESTWSManagement@1002 : Codeunit 60000;
      result@1000 : Text;
      json@1011 : Text;
    BEGIN
      JTokenWriter := JTokenWriter.JTokenWriter;
      WITH JTokenWriter DO BEGIN
        WriteStartObject;
        WritePropertyName('Sell_to_Customer_No');
        WriteValue('46251425');
        WriteEndObject;
        JObject := Token;
      END;

      json := JObject.ToString;

      StringContent := StringContent.StringContent(json,Encoding.UTF8,'application/json');

      Parameters := Parameters.Dictionary();
      Parameters.Add('baseurl',BaseUrl);
      Parameters.Add('path',GetODataPath('SalesOrder'));
      Parameters.Add('restmethod','POST');
      Parameters.Add('accept','application/json');
      Parameters.Add('username',GetUserName);
      Parameters.Add('password',GetPassword);
      Parameters.Add('httpcontent',StringContent);

      RESTWSManagement.CallRESTWebService(Parameters,HttpResponseMessage);
      result := HttpResponseMessage.Content.ReadAsStringAsync.Result;

      JObject := JObject.Parse(result);
      OrderNo := JsonHelperFunctions.GetValueAsText(JObject,'No');
      MESSAGE('Sales Order %1 has been created',OrderNo);
    END;

    LOCAL PROCEDURE CreateNewSalesLine@7(OrderNo@1009 : Code[20]);
    VAR
      Parameters@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      JObject@1007 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      JTokenWriter@1006 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JTokenWriter";
      JsonFormatting@1010 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Formatting";
      StringContent@1005 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.StringContent";
      Encoding@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.Encoding";
      HttpResponseMessage@1003 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
      RESTWSManagement@1002 : Codeunit 60000;
      result@1000 : Text;
      json@1011 : Text;
    BEGIN
      JTokenWriter := JTokenWriter.JTokenWriter;
      WITH JTokenWriter DO BEGIN
        WriteStartObject;
        WritePropertyName('Type');
        WriteValue('Item');
        WritePropertyName('No');
        WriteValue('1000');
        WritePropertyName('Quantity');
        WriteValue(FORMAT(5,0,9));
        WritePropertyName('Requested_Delivery_Date');
        WriteValue(FORMAT(011216D,0,9));
        WriteEndObject;
        JObject := Token;
      END;

      json := JObject.ToString;
      StringContent := StringContent.StringContent(json,Encoding.UTF8,'application/json');

      Parameters := Parameters.Dictionary();
      Parameters.Add('baseurl',BaseUrl);
      Parameters.Add('path',GetODataPath('SalesOrder(Document_Type=''Order'',No=''' + OrderNo + ''')/SalesOrderSalesLines'));
      Parameters.Add('restmethod','POST');
      Parameters.Add('accept','application/json');
      Parameters.Add('username',GetUserName);
      Parameters.Add('password',GetPassword);
      Parameters.Add('httpcontent',StringContent);

      RESTWSManagement.CallRESTWebService(Parameters,HttpResponseMessage);
      result := HttpResponseMessage.Content.ReadAsStringAsync.Result;

      JObject := JObject.Parse(result);

      MESSAGE('Sales Line created with Line Amount: %1',JsonHelperFunctions.GetValueAsDecimal(JObject,'Line_Amount'));
    END;

    LOCAL PROCEDURE UpdateSalesOrder@4(Orderno@1012 : Code[20]);
    VAR
      Parameters@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      JToken@1015 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken";
      JObject@1007 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JObject";
      JTokenWriter@1006 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JTokenWriter";
      StringContent@1005 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.StringContent";
      Encoding@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.Encoding";
      HttpResponseMessage@1003 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
      ETag@1013 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.Headers.EntityTagHeaderValue";
      RESTWSManagement@1002 : Codeunit 60000;
      NAVWSReadDemo@1014 : Codeunit 72000;
      result@1000 : Text;
      json@1011 : Text;
    BEGIN
      json := NAVWSReadDemo.GetSalesOrder(Orderno,ETag);

      //Alternatively, get ETag from json:
      //GetETagFromJson(json,ETag);

      JTokenWriter := JTokenWriter.JTokenWriter;
      WITH JTokenWriter DO BEGIN
        WriteStartObject;
        WritePropertyName('External_Document_No');
        WriteValue('PO0192837465');
        WriteEndObject;
        JObject := Token;
      END;

      json := JObject.ToString;
      StringContent := StringContent.StringContent(json,Encoding.UTF8,'application/json');

      Parameters := Parameters.Dictionary();
      Parameters.Add('baseurl',BaseUrl);
      Parameters.Add('path',GetODataPath('SalesOrder(Document_Type=''Order'',No=''' + Orderno + ''')'));
      Parameters.Add('restmethod','PATCH');
      Parameters.Add('accept','application/json');
      Parameters.Add('username',GetUserName);
      Parameters.Add('password',GetPassword);
      Parameters.Add('httpcontent',StringContent);
      Parameters.Add('etag',ETag);

      IF NOT RESTWSManagement.CallRESTWebService(Parameters,HttpResponseMessage) THEN BEGIN
        result := HttpResponseMessage.Content.ReadAsStringAsync.Result;
        IF JsonHelperFunctions.TryParse(result,JToken) THEN
          MESSAGE(JsonHelperFunctions.GetODataErrorMessage(JToken))
        ELSE
          MESSAGE('An error as occurred during the web service call.\\%1\\%2',HttpResponseMessage.StatusCode,result);
      END;
    END;

    LOCAL PROCEDURE DeleteSalesOrder@8(Orderno@1012 : Code[20]);
    VAR
      Parameters@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      JToken@1004 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken";
      HttpResponseMessage@1003 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.HttpResponseMessage";
      ETag@1013 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.Headers.EntityTagHeaderValue";
      RESTWSManagement@1002 : Codeunit 60000;
      NAVWSReadDemo@1014 : Codeunit 72000;
      result@1000 : Text;
    BEGIN
      result := NAVWSReadDemo.GetSalesOrder(Orderno,ETag);

      Parameters := Parameters.Dictionary();
      Parameters.Add('baseurl',BaseUrl);
      Parameters.Add('path',GetODataPath('SalesOrder(Document_Type=''Order'',No=''' + Orderno + ''')'));
      Parameters.Add('restmethod','DELETE');
      Parameters.Add('accept','application/json');
      Parameters.Add('username',GetUserName);
      Parameters.Add('password',GetPassword);
      Parameters.Add('etag',ETag);

      IF NOT RESTWSManagement.CallRESTWebService(Parameters,HttpResponseMessage) THEN BEGIN
        result := HttpResponseMessage.Content.ReadAsStringAsync.Result;
        IF JsonHelperFunctions.TryParse(result,JToken) THEN
          MESSAGE(JsonHelperFunctions.GetODataErrorMessage(JToken))
        ELSE
          MESSAGE('An error as occurred during the web service call.\\%1\\%2',HttpResponseMessage.StatusCode,result);
      END;
    END;

    LOCAL PROCEDURE Initialize@2();
    BEGIN
      BaseUrl := 'http://MYNAV:8048/';
      NAVServerInstance := 'DynamicsNAV90_WS';
      WSCompanyName := 'CRONUS International Ltd.';
    END;

    LOCAL PROCEDURE GetUserName@17() : Text;
    BEGIN
      EXIT('WEBSERVICE');
    END;

    LOCAL PROCEDURE GetPassword@18() : Text;
    BEGIN
      EXIT('xz46L9GuM7M57Q4FBYVoFMN+Yc2JZiVg60mfUPApaxw=');
    END;

    LOCAL PROCEDURE GetODataPath@9(WSMethod@1000 : Text) ReturnValue : Text;
    BEGIN
      ReturnValue := STRSUBSTNO('%1/OData/Company(''%2'')/%3',
                                NAVServerInstance,
                                UrlPathEncode(WSCompanyName),
                                WSMethod);
    END;

    LOCAL PROCEDURE UrlPathEncode@3(Value@1000 : Text) ReturnValue : Text;
    VAR
      HttpUtility@1001 : DotNet "'System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Web.HttpUtility";
    BEGIN
      ReturnValue := HttpUtility.UrlPathEncode(Value);
    END;

    LOCAL PROCEDURE EscapeDataString@1(Value@1000 : Text) ReturnValue : Text;
    VAR
      HttpUtility@1001 : DotNet "'System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Web.HttpUtility";
      Uri@1002 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Uri";
    BEGIN
      ReturnValue := Uri.EscapeDataString(Value);
    END;

    LOCAL PROCEDURE GetETagFromJson@25(json@1001 : Text;VAR ETag@1000 : DotNet "'System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Net.Http.Headers.EntityTagHeaderValue");
    VAR
      JToken@1002 : DotNet "'Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'.Newtonsoft.Json.Linq.JToken";
    BEGIN
      IF JsonHelperFunctions.TryParse(json,JToken) THEN
        ETag := ETag.EntityTagHeaderValue(STRSUBSTNO('"''%1''"',EscapeDataString(JsonHelperFunctions.GetValueAsText(JToken,'ETag'))),TRUE);
    END;

    BEGIN
    END.
  }
}

OBJECT Page 72000 Test Json Values
{
  OBJECT-PROPERTIES
  {
    Date=06-12-16;
    Time=23:30:57;
    Modified=Yes;
    Version List=WebService-Example;
  }
  PROPERTIES
  {
    SourceTable=Table2000000026;
    SourceTableView=WHERE(Number=CONST(1));
    OnOpenPage=BEGIN
                 TextValue := 'This is a test web service';
                 IntegerValue := ROUND(RANDOM(10000),1);
                 DecimalValue := RANDOM(100000000) / RANDOM(1000);
                 DateValue := WORKDATE;
                 TimeValue := TIME;
                 DateTimeValue := CURRENTDATETIME;
                 BooleanValue := TRUE;
               END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 9   ;1   ;Group     ;
                GroupType=Group }

    { 2   ;2   ;Field     ;
                Name=TextValue;
                SourceExpr=TextValue }

    { 3   ;2   ;Field     ;
                Name=IntegerValue;
                SourceExpr=IntegerValue }

    { 4   ;2   ;Field     ;
                Name=DecimalValue;
                SourceExpr=DecimalValue }

    { 5   ;2   ;Field     ;
                Name=DateValue;
                SourceExpr=DateValue }

    { 6   ;2   ;Field     ;
                Name=TimeValue;
                SourceExpr=TimeValue }

    { 7   ;2   ;Field     ;
                Name=DateTimeValue;
                SourceExpr=DateTimeValue }

    { 8   ;2   ;Field     ;
                Name=BooleanValue;
                SourceExpr=BooleanValue }

  }
  CODE
  {
    VAR
      TextValue@1000 : Text INDATASET;
      IntegerValue@1001 : Integer INDATASET;
      DecimalValue@1002 : Decimal;
      DateValue@1003 : Date;
      TimeValue@1004 : Time;
      DateTimeValue@1005 : DateTime;
      BooleanValue@1006 : Boolean INDATASET;

    BEGIN
    END.
  }
}

